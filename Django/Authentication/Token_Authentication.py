"""
1. Token Authentication
Token-based authentication is a simple and stateless method where a client sends a token with every request to authenticate the user. The token is usually generated by the server when the user logs in and is stored client-side (e.g., in local storage).

When to Use Token Authentication:
Mobile or Single-Page Applications (SPAs): Token authentication is ideal for mobile apps and SPAs that need to interact with your API because it doesn't rely on cookies or sessions.
Stateless APIs: If you're building a stateless API where each request is independent and doesn't need to maintain server-side session data, token authentication is a good choice.
Simplicity: Token authentication is straightforward to implement and doesn't require complex setups. It's suitable for smaller projects where you want a lightweight authentication mechanism.


Example:
A mobile app sends an authentication token in the Authorization header for each API request:

Authorization: Token <your_token_here>

Drawbacks:
Tokens need to be securely stored on the client side (e.g., local storage in a browser, secure storage in a mobile app).
Token-based authentication may not be as secure as more advanced methods like OAuth2 for certain use cases (e.g., when needing fine-grained control over permissions).
"""